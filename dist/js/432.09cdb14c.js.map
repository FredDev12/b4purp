{"version":3,"file":"js/432.09cdb14c.js","mappings":"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","sources":["webpack://frontend/./src/components/NavBar.vue","webpack://frontend/./src/components/NavBar.vue?01fd","webpack://frontend/./src/components/SidebarComponent.vue","webpack://frontend/./src/components/SidebarComponent.vue?df95","webpack://frontend/./src/views/dashboard.vue","webpack://frontend/./src/views/dashboard.vue?d6b8","webpack://frontend/./src/store/Storage.js"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- Navbar (Header) -->\r\n      <header class=\"navbar\">\r\n        <!-- Logo -->\r\n        <div class=\"logo\">\r\n          <a href=\"/\">MonLogo</a>\r\n        </div>\r\n  \r\n        <!-- Menu -->\r\n        <div class=\"menu\" :class=\"{'active': isMenuOpen}\">\r\n          <ul>\r\n            <li v-for=\"item in menuItems\" :key=\"item.name\" :class=\"{ active: item.active }\">                \r\n                <router-link class=\"link\" :to=\"item.link\">{{ item.name }}</router-link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- Dropdown Action Bubble -->\r\n        <div class=\"action-bubble\">\r\n           <h1 class=\"welcom\" >Bonjour, {{ username }} !</h1>\r\n        \r\n          <button @click=\"toggleDropdown\" class=\"action-button\">\r\n            <img src=\"../assets/user1.png\" alt=\"Profile\" class=\"profile-picture\" />\r\n          </button>\r\n          <div v-if=\"isDropdownOpen\" class=\"dropdown-menu\">\r\n            <ul>\r\n              <li><a href=\"#\" @click.prevent=\"profil\">Mon profil</a></li>\r\n              <li><a href=\"#\" @click.prevent=\"logout\">Se déconnecter</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  \r\n      </header>\r\n      \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n   import { defineComponent, PropType } from 'vue';\r\n   import { useRouter } from 'vue-router';\r\n   import { useStore } from '../store/Storage';\r\n\r\n  export default defineComponent ({\r\n    name: 'NavbarComponent',\r\n    props: {\r\n        menuItems: {\r\n        type: Array,\r\n        required: true,\r\n      },\r\n    },\r\n    setup() {\r\n      const router = useRouter();\r\n      const store = useStore();\r\n      const username = store.userProfile ? store.userProfile.name : 'Default Name';\r\n\r\n      const logout = () => {\r\n        // Suppression du token JWT du stockage local\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem(\"username\");\r\n        localStorage.removeItem(\"role\");\r\n        // Redirection vers la page de connexion\r\n        router.push('/');\r\n      };\r\n      const profil = () => {        \r\n        router.push({ name: 'profile' });\r\n      };\r\n\r\n      return {\r\n        logout,profil,username\r\n      };\r\n    },\r\n    data() {\r\n      return {\r\n        isMenuOpen: false,\r\n        isDropdownOpen: false,\r\n      };\r\n    },\r\n    methods: {\r\n      toggleMenu() {\r\n        this.isMenuOpen = !this.isMenuOpen;\r\n      },\r\n      toggleDropdown() {\r\n      this.isDropdownOpen = !this.isDropdownOpen;\r\n      },\r\n    }\r\n  });\r\n  </script>\r\n  \r\n\r\n  ","import { render } from \"./NavBar.vue?vue&type=template&id=13e4c432\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <aside class=\"sidebar\">\r\n      <nav>\r\n        <ul>\r\n          <li v-for=\"item in menuItems\" :key=\"item.name\" :class=\"{ active: item.active }\">\r\n            <a :href=\"item.link\">{{ item.name }}</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent, PropType } from 'vue';\r\n  \r\n  export default defineComponent({\r\n    name: 'SidebarComponent',\r\n    props: {\r\n      menuItems: {\r\n        type: Array,\r\n        required: true,\r\n      },\r\n    },\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .sidebar {\r\n    width: 20%;\r\n    background-color: #28a745;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .sidebar ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .sidebar ul li {\r\n    margin: 15px 0;\r\n  }\r\n  \r\n  .sidebar ul li a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .sidebar ul li.active a {\r\n    font-weight: bold;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./SidebarComponent.vue?vue&type=template&id=8ce43eac&scoped=true\"\nimport script from \"./SidebarComponent.vue?vue&type=script&lang=js\"\nexport * from \"./SidebarComponent.vue?vue&type=script&lang=js\"\n\nimport \"./SidebarComponent.vue?vue&type=style&index=0&id=8ce43eac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ce43eac\"]])\n\nexport default __exports__","<template>\r\n    <div  class=\"dashboard\">\r\n      <NavBar :menuItems=\"filteredMenuItems\" />\r\n  \r\n      <!-- Contenu principal -->\r\n      <main class=\"dashboard-container\">\r\n        \r\n        <section class=\"user-profile\">\r\n        <h2>Profil Utilisateur</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nom</th>\r\n              <th>Rôle</th>\r\n              <th>Contract</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{{ store.userProfile.name }}</td> \r\n              <td>{{ store.userProfile.role }}</td>             \r\n              <td>              \r\n                <tr v-for=\"contract in userContract\" :key=\"contract.id\">\r\n                  <td>{{ contract.name || 'Pas de contrat' }}</td>\r\n                </tr>              \r\n              </td>\r\n              <td>              \r\n                <tr v-for=\"contract in userContract\" :key=\"contract.id\">\r\n                  <td>{{ contract.description || 'Pas de description' }}</td>\r\n                </tr>              \r\n              </td>           \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        </section>\r\n\r\n        <!-- Section 2: Présentation des Contract -->\r\n        <section class=\"user-profile\" v-if=\"role !== 'Manager' && role !== 'Utilisateur'\">\r\n          <h2>Contract</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nom</th>\r\n                <th>description</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"contract in contractList\" :key=\"contract.id\">\r\n                <td>{{ contract.name }}</td>            \r\n                <td>{{ contract.description }}</td> \r\n                <td>\r\n                  <button @click=\"editContract(contract.id)\" class=\"edit-button\" >Éditer</button>\r\n                  <button @click=\"deleteContract(contract.id)\" class=\"delete-button\" >Supprimer</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n\r\n        <!-- Section 2: Présentation des Clients -->\r\n        <section class=\"user-profile\" v-if=\"role !== 'Client'\">\r\n          <h2>Clients</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nom</th>\r\n                <th>Contrat</th>\r\n                <th v-if=\"role !== 'Manager' && role !== 'Utilisateur' \">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"client in clientList\" :key=\"client.id\">\r\n                <td>{{ client.name }}</td>            \r\n                <td>              \r\n                  <tr v-for=\"contract in contractForManager\" :key=\"contract.id\">\r\n                    <td>{{ contract.name || 'Pas de contrat' }}</td>\r\n                    \r\n                  </tr>              \r\n                </td>\r\n                <td>\r\n                  <button @click=\"editEntity(client.id)\" class=\"edit-button\" v-if=\"role !== 'Manager' && role !== 'Utilisateur' \">Éditer</button>\r\n                  <button @click=\"deleteEntity(client.id)\" class=\"delete-button\" v-if=\"role !== 'Manager' && role !== 'Utilisateur' \">Supprimer</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n\r\n        <!-- Section 3: Présentation des Managers -->\r\n        <section class=\"user-profile\" v-if=\"role !== 'Manager'\">\r\n          <h2>Managers</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nom</th>\r\n                <th>Contrat</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"manager in managerList\" :key=\"manager.id\">\r\n                <td>{{ manager.name }}</td>\r\n                <td>              \r\n                  <tr v-for=\"contract in manager.contracts\" :key=\"contract.id\">\r\n                    <td>\r\n                      {{ contract.name || 'Pas de contrat'}}\r\n                      <!-- Action buttons for each contract -->\r\n                      <button @click=\"editEntity(contract.id)\"  v-if=\"role !== 'Utilisateur'\" class=\"edit-button\">Éditer</button>\r\n                      <button @click=\"deleteEntity(contract.id)\" v-if=\"role !== 'Utilisateur'\" class=\"delete-button\">Supprimer</button>\r\n                    </td>\r\n                  </tr>              \r\n                </td>            \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n\r\n        <!-- Section 4: Présentation des Utilisateurs -->\r\n        <section class=\"user-profile\" v-if=\"role !== 'Utilisateur'\">\r\n          <h2>Utilisateurs</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nom</th>\r\n                <th>Manager</th>\r\n                <th>Contrat</th>\r\n                <th>Tache</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody v-if=\"role !== 'Manager'\">\r\n              <tr v-for=\"user in utilisateurList\" :key=\"user.id\">\r\n                <td>{{ user.name }}</td>\r\n                <td>\r\n                {{ store.users.find(manager => manager.id === Number(user.managerId)) ? store.users.find(manager => manager.id === Number(user.managerId)).name : 'Manager Inconnu' }}\r\n                  \r\n                </td>\r\n                <td>\r\n                  <tr v-for=\"contract in user.contracts\" :key=\"contract.id\">\r\n                    <td>{{ contract.name || 'Pas de contrat' }}</td>\r\n                  </tr>\r\n                </td>\r\n                <td>{{ user.task || 'Pas de tache'}}</td>\r\n                <td>{{ user.status }}</td>\r\n                <td>\r\n                  <button @click=\"editEntity(user.id)\" class=\"edit-button\" >Éditer</button>\r\n                  <button @click=\"deleteEntity(user.id)\" class=\"delete-button\">Supprimer</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tbody v-else>\r\n              <tr v-for=\"user in utilisateurForManager\" :key=\"user.id\">\r\n                <td>{{ user.name }}</td>\r\n                <td>\r\n                  {{ nameManager}}\r\n                </td>\r\n                <td>\r\n                  <tr v-for=\"contract in user.contracts\" :key=\"contract.id\">\r\n                    <td>{{ contract.name || 'Pas de contrat' }}</td>\r\n                  </tr>\r\n                </td>\r\n                <td>{{ user.task || 'Pas de tache'}}</td>\r\n                <td>{{ user.status }}</td>\r\n                <td>\r\n                  <button @click=\"editEntity(user.id)\" class=\"edit-button\" >Éditer</button>\r\n                  <button @click=\"deleteEntity(user.id)\" class=\"delete-button\">Supprimer</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n\r\n        <!-- Modal d'édition -->\r\n        <div v-if=\"isEditModalVisible\" class=\"modal-overlay\">\r\n            <form @submit.prevent=\"confirmEdit\" class=\"modal-content\" >\r\n              <h3>Modifier {{ currentEntity?.name }}</h3>\r\n              <div>\r\n                <label for=\"name\">Nom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  v-model=\"editForm.name\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label for=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  v-model=\"editForm.description\"\r\n                  rows=\"4\"\r\n                ></textarea>\r\n              </div>\r\n              <button type=\"submit\" :disabled=\"isDeleting\">\r\n                {{ isDeleting ? \"Enregistrement en cours...\" : \"Enregistrer\" }}\r\n              </button>\r\n              <button type=\"button\" @click=\"closeModal\">Annuler</button>\r\n              <p v-if=\"deleteError\" class=\"error-message\">{{ deleteError }}</p>\r\n            </form>\r\n          \r\n        </div>\r\n\r\n        <!-- Modal d'édition pour les utilisateurs -->\r\n        <div v-if=\"isEditUserModalVisible\" class=\"modal-overlay\">\r\n          <form @submit.prevent=\"confirmUserEdit\" class=\"modal-content\">\r\n            <h3>Modifier {{ currentUser?.name }}</h3>\r\n            <div>\r\n              <label for=\"name\">Nom</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                v-model=\"userEditForm.name\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                v-model=\"userEditForm.email\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"role\">Rôle</label>\r\n              <select id=\"role\" v-model=\"userEditForm.role\">\r\n                <option value=\"Client\">Client</option>\r\n                <option value=\"Manager\">Manager</option>\r\n                <option value=\"Utilisateur\">Utilisateur</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label for=\"status\">tache</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"task\"\r\n                v-model=\"userEditForm.task\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"status\">Statut</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"status\"\r\n                v-model=\"userEditForm.status\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Enregistrer</button>\r\n            <button type=\"button\" @click=\"closeModal\">Annuler</button>\r\n          </form>          \r\n        </div>\r\n\r\n        <!-- Modal de suppression -->\r\n        <div v-if=\"isDeleteModalVisible\" class=\"modal-overlay\" role=\"dialog\" aria-labelledby=\"modal-title\">\r\n          <div class=\"modal-content\">\r\n            <h3 id=\"modal-title\">Supprimer {{ currentEntity?.name }}</h3>\r\n            <p>Êtes-vous sûr de vouloir supprimer cet élément ?</p>\r\n            <div class=\"modal-buttons\">\r\n              <button @click=\"confirmDelete\" :disabled=\"isDeleting\">Confirmer</button>\r\n              <button @click=\"closeModal\" :disabled=\"isDeleting\">Annuler</button>\r\n            </div>\r\n            <p v-if=\"deleteError\" class=\"error-message\">{{ deleteError }}</p>\r\n          \r\n          </div>\r\n        </div>\r\n\r\n        <!-- Modal de suppression -->\r\n        <div v-if=\"isDeleteUserModalVisible\" class=\"modal-overlay\" role=\"dialog\" aria-labelledby=\"modal-title\">\r\n          <div class=\"modal-content\">\r\n            <h3 id=\"modal-title\">Supprimer {{ currentEntity?.name }}</h3>\r\n            <p>Êtes-vous sûr de vouloir supprimer cet Utilisateur ?</p>\r\n            <div class=\"modal-buttons\">\r\n              <button @click=\"confirmDeleteUser\" :disabled=\"isDeleting\">Confirmer</button>\r\n              <button @click=\"closeModal\" :disabled=\"isDeleting\">Annuler</button>\r\n            </div>\r\n            <p v-if=\"deleteError\" class=\"error-message\">{{ deleteError }}</p>\r\n          \r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n    \r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent, ref, onMounted } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import { useStore } from '../store/Storage';\r\n  import ButtonComponent from '../components/ButtonComponent.vue';\r\n  import SidebarComponent from '../components/SidebarComponent.vue';\r\n  import NavBar from '../components/NavBar.vue';\r\n  import { deleteUser, deleteContractId, getContract, listUsers, updateContract, updateUsers } from '../api/serviceAPI';\r\n  \r\n\r\n  \r\n  export default defineComponent({\r\n    name: \"Dashboard\",\r\n    mounted() {\r\n      document.title = 'Dashboard';\r\n    },\r\n    components: {\r\n      ButtonComponent,\r\n      SidebarComponent,\r\n      NavBar,\r\n    },\r\n    mutations: {\r\n      removeContract(state, id) {\r\n        state.listContract = state.listContract.filter((contract) => contract.id !== id);\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        filteredMenuItems: [],// Filtered based on role\r\n        username: \"Invité\",\r\n        role: \"User\", // Rôle par défaut\r\n        isEditModalVisible: false,\r\n        isEditUserModalVisible: false,\r\n        isDeleteUserModalVisible: false,\r\n        isDeleteModalVisible: false,\r\n        currentEntity: null, // L'entité actuellement sélectionnée pour édition/suppression\r\n        deleteError: null,\r\n        isDeleting: false,\r\n\r\n        editForm: {\r\n          name: \"\",\r\n          description: \"\",\r\n        },\r\n        userEditForm: {\r\n          name: \"\",\r\n          email: \"\",\r\n          role: \"\",\r\n          task:\"\",\r\n          status: \"\",\r\n        },\r\n                \r\n      };\r\n    },\r\n    \r\n    setup() {\r\n      const router = useRouter();\r\n      const store = useStore();\r\n  \r\n      const entities = ref([]);\r\n      const entityTitle = ref(\"\");\r\n      \r\n      \r\n      // Récupérer les données utilisateur depuis localStorage\r\n      const username = store.userProfile ? store.userProfile.name : 'Default Name';\r\n      const role = localStorage.getItem('role') || \"Utilisateur\";  \r\n      const token = localStorage.getItem('token');\r\n      const userId = localStorage.getItem('id');\r\n      const isAuthenticated = store.isAuthenticated;\r\n      \r\n      \r\n      let clientList;\r\n      let managerList;\r\n      let utilisateurList;\r\n      let utilisateurForManager;\r\n      let nameManager;\r\n      const contractList  = ref([]);\r\n\r\n      \r\n      let contractForManager;\r\n\r\n      \r\n\r\n\r\n      const userContract = store.userProfile.contracts.map(contract => ({\r\n                id: contract.id,\r\n                name: contract.name,\r\n                description: contract.description,\r\n                userId: contract.userId,\r\n            }) || []);\r\n\r\n       \r\n\r\n      // Check and filter the users list safely\r\n      if (store.users) {\r\n\r\n          clientList = store.users.filter(user => user.role === 'Client');\r\n          managerList = store.users.filter(user => user.role === 'Manager');\r\n          utilisateurList = store.users.filter(user => user.role === 'Utilisateur');\r\n\r\n          \r\n          // Vérifie si l'utilisateur avec l'ID spécifié existe dans la liste\r\n          utilisateurForManager = utilisateurList.filter((user) => user.managerId?.includes(userId));\r\n          // Vérifier s'il y a des utilisateurs associés au manager\r\n          if (utilisateurForManager.length > 0) {\r\n              // Récupérer le nom du manager\r\n              const manager = managerList.find(manager => manager.id === Number(userId));\r\n              nameManager = manager ? manager.name : \"Manager Inconnu\";\r\n\r\n              console.log(\"Nom du Manager :\", nameManager);\r\n          } else {\r\n              console.log(\"Aucun utilisateur trouvé pour ce manager.\");\r\n          }\r\n\r\n          // Logs pour vérifier les résultats\r\n          console.log(\"Liste des utilisateurs :\", utilisateurList);\r\n          console.log(\"Utilisateurs pour le manager spécifié :\", utilisateurForManager);\r\n          console.log(\"Nom du Manager :\", nameManager);\r\n          \r\n        \r\n          // Parcourir les clients\r\n          clientList.forEach(clientItem => {\r\n            if (clientItem.contracts) {\r\n              const listConctractInClient = clientItem.contracts; // Liste des contrats du client\r\n\r\n              // Vérifier quels contrats dans listConctractInClient correspondent à userContract\r\n              const matchingContracts = listConctractInClient.filter(clientContract =>\r\n                userContract.some(userC => userC.id === clientContract.id) // Comparaison par ID\r\n              );\r\n\r\n              // Afficher les contrats correspondants\r\n              if (matchingContracts.length > 0) {\r\n                \r\n                contractForManager = matchingContracts;\r\n                \r\n              } else {\r\n                console.log('\\n\\n Aucun contrat correspondant trouvé pour ce client.');\r\n              }\r\n            }\r\n          });\r\n\r\n          let managerID =[];\r\n          let utilID =[];\r\n         \r\n          utilisateurList.forEach(manager =>{\r\n            \r\n            if (manager.managerId) {\r\n              managerID = managerID.concat(manager.managerId);\r\n              utilID = utilID.concat(manager.id);\r\n            }\r\n          })\r\n\r\n      } else {\r\n          console.error('store.users is undefined');\r\n          // Optionally initialize or fetch users\r\n      }\r\n\r\n      console.log('\\n\\n user actif ', userContract, '\\n\\n');      \r\n      console.log('\\n\\n client', clientList, '\\n\\n');\r\n      console.log('\\n\\n Manager', managerList, '\\n\\n');\r\n      console.log('\\n\\n utilisateur',utilisateurForManager, '\\n\\n');\r\n      //console.log('\\n\\n\\n\\n', userContract, '\\n\\n\\n');\r\n\r\n\r\n      \r\n  \r\n      // Définir les menus spécifiques à chaque rôle\r\n      const menuItems = ref([\r\n          { name: 'Tableau de Bord', link: '/dashboard', active: false, visibleTo: ['Admin', 'Client', 'Manager', 'Utilisateur'] },\r\n          { name: 'Liste des Utilisateurs', link: '/liste', active: false, visibleTo: ['Admin', 'Client', 'Manager'] },\r\n          { name: 'Liste des contract', link: '/contract', active: true, visibleTo: ['Admin', 'Client'] },\r\n      ]);\r\n\r\n      // Filtrer les éléments du menu en fonction du rôle de l'utilisateur\r\n      const filteredMenuItems = menuItems.value.filter(item => item.visibleTo.includes(role));\r\n  \r\n      onMounted(async() => {\r\n        if (token) {\r\n          console.log(username,'-' ,role);\r\n\r\n          const response = await listUsers(role, token);\r\n          entities.value = response;\r\n          console.log('storage', response);\r\n\r\n          contractList.value = await getContract(role, token);\r\n          \r\n        } else {\r\n          console.error(\"authentication token is missing\");\r\n          \r\n        }\r\n\r\n        \r\n      });\r\n\r\n      function editEntity(entityId) {\r\n        const user = store.users.find((u) => u.id === entityId);\r\n        this.currentUser = user;\r\n        this.userEditForm.name = user.name;\r\n        this.userEditForm.email = user.email;\r\n        this.userEditForm.role = user.role;\r\n        this.userEditForm.task = user.task;\r\n        this.userEditForm.status = user.status || \"\";\r\n        this.isEditUserModalVisible = true;\r\n      };\r\n\r\n      function editContract(entityId) {\r\n        const entity = store.listContract.find((e) => e.id === entityId);\r\n        this.currentEntity = entity;\r\n        this.editForm.name = entity.name;\r\n        this.editForm.description = entity.description;\r\n        this.isEditModalVisible = true;\r\n      };\r\n      \r\n      function deleteEntity(entityId) {\r\n        const entity = store.users.find((e) => e.id === entityId);        \r\n        if (entity) {\r\n          this.currentEntity = entity;\r\n          this.isDeleteUserModalVisible = true;\r\n        }       \r\n        \r\n      };\r\n\r\n      function deleteContract(entityId) {\r\n        // Trouve l'entité et ouvre la modale\r\n        const entity = store.listContract.find((e) => e.id === entityId);\r\n        if (entity) {\r\n          this.currentEntity = entity;\r\n          this.isDeleteModalVisible = true;\r\n        }\r\n        \r\n        \r\n      };\r\n\r\n      function closeModal() {\r\n        this.isEditModalVisible = false;\r\n        this.isDeleteModalVisible = false;\r\n        this.isEditUserModalVisible = false;\r\n        this.isDeleteUserModalVisible = false;\r\n        this.currentEntity = null;\r\n        this.deleteError = null;\r\n      };\r\n      async function confirmEdit() {\r\n         // Logique pour sauvegarder les modifications\r\n        \r\n        if (!this.currentEntity || !this.currentEntity.id) {\r\n          console.error(\"Aucune entité valide sélectionnée pour la suppression.\");\r\n          this.deleteError = \"Aucune entité valide sélectionnée.\";\r\n          return;\r\n        }\r\n        console.log(\"Updating entity:\", this.currentEntity.id, this.editForm);\r\n\r\n        this.isDeleting = true;\r\n        this.deleteError = null;\r\n\r\n        try {          \r\n          // Appel à la fonction d'API pour supprimer l'entité\r\n          await updateContract(this.currentEntity.id, {\r\n            name: this.editForm.name,\r\n            description: this.editForm.description,\r\n          });\r\n\r\n          // Mettre à jour localement la liste des contrats\r\n          contractList.value = await getContract(role, token);\r\n          \r\n          this.closeModal();\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la suppression :\", error);\r\n          this.deleteError = \"Échec de la suppression. Veuillez réessayer.\";\r\n        } finally {\r\n          this.isDeleting = false;\r\n        }\r\n      };\r\n\r\n      async function confirmUserEdit() {\r\n        if (!this.currentEntity || !this.currentEntity.id) {\r\n          console.error(\"Aucune entité valide sélectionnée pour la suppression.\");\r\n          this.deleteError = \"Aucune entité valide sélectionnée.\";\r\n          return;\r\n        }\r\n        console.log(\"Updating user:\", this.currentUser.id, this.userEditForm);\r\n\r\n        this.isDeleting = true;\r\n        this.deleteError = null;\r\n\r\n        try {          \r\n          // Appel à la fonction d'API pour supprimer l'entité\r\n          await updateUsers(this.currentEntity.id, {\r\n            // Mettre à jour l'utilisateur localement ou via une API\r\n            name: this.userEditForm.name,\r\n            email : this.userEditForm.email,\r\n            role : this.userEditForm.role,\r\n            task : this.userEditForm.task,\r\n            status : this.userEditForm.status,\r\n          });\r\n\r\n          // Mettre à jour localement la liste des contrats\r\n          utilisateurList = store.users.filter(user => user.role === 'Utilisateur');\r\n          \r\n          this.closeModal();\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la suppression :\", error);\r\n          this.deleteError = \"Échec de la suppression. Veuillez réessayer.\";\r\n        } finally {\r\n          this.isDeleting = false;\r\n        }\r\n\r\n      };\r\n\r\n      async function confirmDelete() {\r\n       \r\n        if (!this.currentEntity || !this.currentEntity.id) {\r\n          console.error(\"Aucune entité valide sélectionnée pour la suppression.\");\r\n          this.deleteError = \"Aucune entité valide sélectionnée.\";\r\n          return;\r\n        }\r\n        console.log(\"Deleting entity:\", this.currentEntity.id);\r\n\r\n        this.isDeleting = true;\r\n        this.deleteError = null;\r\n\r\n        try {          \r\n          // Appel à la fonction d'API pour supprimer l'entité\r\n          await deleteContractId(this.currentEntity.id);\r\n\r\n          // Mettre à jour localement la liste des contrats\r\n          contractList.value = await getContract(role, token);\r\n          \r\n          this.closeModal();\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la suppression :\", error);\r\n          this.deleteError = \"Échec de la suppression. Veuillez réessayer.\";\r\n        } finally {\r\n          this.isDeleting = false;\r\n        }\r\n      };\r\n\r\n      async function confirmDeleteUser() {\r\n       \r\n       if (!this.currentEntity || !this.currentEntity.id) {\r\n         console.error(\"Aucune entité valide sélectionnée pour la suppression.\");\r\n         this.deleteError = \"Aucune entité valide sélectionnée.\";\r\n         return;\r\n       }\r\n       console.log(\"Deleting entity:\", this.currentEntity.id);\r\n\r\n       this.isDeleting = true;\r\n       this.deleteError = null;\r\n\r\n       try {          \r\n         // Appel à la fonction d'API pour supprimer l'entité\r\n         await deleteUser(this.currentEntity.id);\r\n         this.closeModal();\r\n       } catch (error) {\r\n         console.error(\"Erreur lors de la suppression :\", error);\r\n         this.deleteError = \"Échec de la suppression. Veuillez réessayer.\";\r\n       } finally {\r\n         this.isDeleting = false;\r\n       }\r\n     };\r\n\r\n      \r\n  \r\n      const logout = async () => {\r\n        //await store.performLogout(store.token);\r\n        router.push({ name: 'Login' });\r\n\r\n      };\r\n      \r\n  \r\n      return {\r\n        username, role, menuItems, filteredMenuItems,utilisateurList, utilisateurForManager,userContract,\r\n        entities, entityTitle, editEntity, closeModal, confirmEdit, confirmDelete,contractForManager,contractList,\r\n        deleteEntity, isAuthenticated,logout, clientList, managerList,store,nameManager,\r\n        editContract,deleteContract, confirmUserEdit,confirmDeleteUser\r\n      };\r\n    },\r\n  });\r\n  </script>\r\n  \r\n  ","import { render } from \"./dashboard.vue?vue&type=template&id=bfdd3bb0\"\nimport script from \"./dashboard.vue?vue&type=script&lang=js\"\nexport * from \"./dashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// src/store/authStore.ts\r\nimport { defineStore } from 'pinia';\r\nimport { login, register, getUserProfile, logoutUser, listUsers, getUsers, getContract } from '../api/serviceAPI';\r\n\r\n\r\nexport const useStore = defineStore({\r\n  id: 'auth',\r\n  state: () => ({\r\n    token: localStorage.getItem('token') || null,\r\n    userProfile: null,\r\n    users: [],\r\n    userList:[],\r\n    listContract: [],\r\n    listClients: [],\r\n    listManagers: [],\r\n    listUtilisateurs: [],\r\n    isAuthenticated: !!localStorage.getItem('token'),\r\n  }),\r\n  actions: {\r\n    async performLogin(email, password) {\r\n      try {\r\n        const response = await login(email, password);\r\n        const token = response.token\r\n        const role = response.role\r\n        const userId = response.id\r\n        this.token = token;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('role', role);\r\n        localStorage.setItem('id', userId);\r\n        this.isAuthenticated = true;\r\n        // Fetch user profile upon successful login\r\n        await this.fetchUserProfile(token);\r\n        await this.fetchUsers(role ,token);\r\n        await this.fetchContract(role, token);\r\n      } catch (error) {\r\n        console.error('Authentication failed:', error);\r\n        throw new Error('Login failed');\r\n      }\r\n    },\r\n\r\n    async fetchUserProfile(token) {\r\n      if (!token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await getUserProfile(token);\r\n        this.userProfile = response;\r\n        this.isAuthenticated = true;\r\n      } catch (error) {\r\n        console.error('Failed to fetch user profile:', error);\r\n        this.isAuthenticated = false;\r\n      }\r\n    },\r\n\r\n    async fetchUsers(role, token){\r\n      if (!token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await listUsers(role, token);\r\n        console.log('storage', response);\r\n        \r\n        this.users = response;\r\n\r\n        console.log(this.users);\r\n        \r\n        this.isAuthenticated = true;\r\n      } catch (error) {\r\n        console.error('Failed to fetch user:', error);\r\n        this.isAuthenticated = false;\r\n      }\r\n\r\n    },\r\n\r\n    async fetchUsersBY(role, token){\r\n      if (!token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await getUsers(role, token);\r\n        console.log('storage', response);\r\n        \r\n        this.userList = response;\r\n\r\n        console.log('liste ',this.userList);\r\n        \r\n        //this.isAuthenticated = true;\r\n      } catch (error) {\r\n        console.error('Failed to fetch user:', error);\r\n        this.isAuthenticated = false;\r\n      }\r\n\r\n    },\r\n\r\n    async fetchContract(role, token){\r\n      if (!token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await getContract(role, token);\r\n        console.log('storage', response);\r\n        \r\n        this.listContract = response;\r\n\r\n        console.log('liste ',this.listContract);\r\n        \r\n        //this.isAuthenticated = true;\r\n      } catch (error) {\r\n        console.error('Failed to fetch user:', error);\r\n        this.isAuthenticated = false;\r\n      }\r\n\r\n    },\r\n    \r\n    async performLogout() {\r\n      if (!this.token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        await logoutUser(this.token);\r\n        this.isAuthenticated = false;\r\n        this.userProfile = null;\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"role\");\r\n        localStorage.removeItem(\"id\");\r\n      } catch (error) {\r\n        console.error('Failed to logout:', error);\r\n      }\r\n    },\r\n\r\n    async addUser(payload){\r\n\r\n    },\r\n\r\n    async fetchUsersByRole(role) {\r\n      if (!this.token) {\r\n        console.error('No token provided');\r\n        return;\r\n      }\r\n      try {\r\n        const users = await listUsers( role, this.token);\r\n        if (role === 'client') {\r\n          this.listClients = users;\r\n        } else if (role === 'manager') {\r\n          this.listManagers = users;\r\n        } else {\r\n          this.listUtilisateurs = users;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Failed to fetch ${role}s:`, error);\r\n      }\r\n    }\r\n  },\r\n});\r\n"],"names":["class","href","isMenuOpen","menuItems","item","key","name","active","to","link","username","toggleDropdown","src","alt","isDropdownOpen","profil","logout","props","type","Array","required","setup","router","store","userProfile","localStorage","removeItem","push","data","methods","toggleMenu","this","__exports__","render","role","id","filteredMenuItems","userContract","contract","description","contractList","editContract","deleteContract","clientList","client","contractForManager","editEntity","deleteEntity","managerList","manager","contracts","utilisateurList","user","users","find","Number","managerId","task","status","utilisateurForManager","nameManager","isEditModalVisible","confirmEdit","currentEntity","for","editForm","rows","disabled","isDeleting","closeModal","deleteError","isEditUserModalVisible","confirmUserEdit","currentUser","userEditForm","email","value","isDeleteModalVisible","confirmDelete","isDeleteUserModalVisible","confirmDeleteUser","mounted","document","title","components","ButtonComponent","SidebarComponent","NavBar","mutations","removeContract","state","listContract","filter","entities","entityTitle","getItem","token","userId","isAuthenticated","map","includes","length","console","log","forEach","clientItem","listConctractInClient","matchingContracts","clientContract","some","userC","managerID","utilID","concat","error","visibleTo","entityId","u","entity","e","async","response","useStore","userList","listClients","listManagers","listUtilisateurs","actions","performLogin","password","setItem","fetchUserProfile","fetchUsers","fetchContract","Error","fetchUsersBY","performLogout","addUser","payload","fetchUsersByRole"],"sourceRoot":""}